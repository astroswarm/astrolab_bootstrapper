---
- hosts: all
  tasks:
    - apt:
        update_cache: true
      become: true
- hosts: all
  tasks:
    - apt:
        name: ntp
      become: true

- hosts: all
  roles:
    - role: avinetworks.docker
      become: true
      docker_log_driver: syslog
      # This gets parsed by avinetworks.docker/templates/docker_config.j2, so we
      # need to render what will properly render our output, rather than render
      # our output directly.
      u_docker_log_opts:
        tag: "{% raw %}{{ '{{' }}.Name{{ '}}' }}/{{ '{{' }}.ImageID{{ '}}' }}{% endraw %}"
      docker_log_opts: "{{ u_docker_log_opts | to_yaml }}" # Convert unicode string to ascii strings

- hosts: all
  become: true
  tasks:
    - name: Create host-data directory
      file:
        path: /host-data
        owner: "{{ansible_user}}"
        group: "{{ansible_user}}"
        state: directory
        recurse: true
    - name: Install "ip route"
      apt:
        name: iproute2
  roles:
    - role: tumf.systemd-service
      systemd_service_name: expose_lan_ip_address
      systemd_service_Unit_Description: HTTP endpoint to get local IP address from a Docker container
      systemd_service_Service_ExecStart: while echo $(/sbin/ip route|awk '/default/ { print $3 }') > /host-data/lan_ip_address; do sleep 60; done
      systemd_service_Service_Restart: always
      systemd_service_Service_RestartSec: 1

- hosts: all
  become: true
  tasks:
    - name: Download base image creator
      get_url:
        url: https://raw.githubusercontent.com/astroswarm/astrolab/master/import_base_image.sh
        dest: /tmp/import_base_image.sh
        mode: 0774
    - name: Build base image
      command: /tmp/import_base_image.sh

- hosts: all
  become: false
  roles:
    - role: dockerized_service_container
      service_name: swarm_brain
      git_repo: https://github.com/astroswarm/swarm_brain.git
      published_ports:
        - "8000:9292"
      volumes:
        - "/var/log/syslog:/mnt/host/var/log/syslog:ro"
        - "/host-data:/host-data:ro"
      env:
        ASTROSWARM_API_HOST: api.astroswarm.com
        HOST_DATA_DIR: /host-data
        RACK_ENV: development
